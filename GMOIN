#Решение СЛУ ГМОИН (метод Жордана-Гаусса)
#Автор: Позолотин Святослав Игоревич


import numpy as np
kp = p = 1
b = x = np.array([9,3,2])
#Расширенная матрица
AB = np.array([[2., 3., -1., 9.],
                [1., -2., 1., 3.],
                [1., 0., 2., 2.]])

A = np.array([[2, 3, -1],
                [1, -2, 1],
                [1, 0, 2]])
print(A)
for i in range(0, len(A) ):
   print (' x [', i ,'] = ', x[ i ] )
for i in range(0, len(A) ):
    aii = A[i , i]
    x [ i ] = x [ i ] / aii
    for j in range( i+1 , len(A) ):
        A[ i, j ] = A[ i, j ] / aii
    A[i , i]= 1
    for k in range(0, len(A)):
        if k != i :
           kp = A[k, i]
           x [ k ] = x [ k ] - x[ i ]* kp
           for j in range( i+1 , len(A) ):
              A[k, j] =  A[k, j] - A[i, j] * kp
           A[k, i] = 0
print(A)
print ( 'Решение системы: ' )
for i in range( 0 , len(A) ):
    print ( 'x[', i ,']= ', x [i] )
